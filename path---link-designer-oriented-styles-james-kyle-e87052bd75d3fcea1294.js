webpackJsonp([0x6a3476eb505e],{1079:function(e,t){e.exports={data:{nodePost:{title:"Designer-Oriented Styles - James Kyle",link:"https://the-pastry-box-project.net/james-kyle/2018-january-22",body:{value:'<blockquote>Each of these have trees of components which are made up of other components and elements (often named different things). Each element in the tree is independently styled. It\'s not built around cascading styles and the expectation is that you can copy any element and place it anywhere else and it will look identical.</blockquote>\r\n<p>Interesting way to think about this - the end result of CSS-in-JS might just be what our designers wanted all along.</p>\r\n<blockquote>Note: I’m going refer to “CSS-in-JS” as “Component-Oriented Styles” from here on out, because JavaScript really doesn’t have much to do with it. “CSS” will refer to the traditional way of writing .css files with selectors and all.</blockquote>\r\n<p>I also really like the term "Component-Oriented Styles." Be it a methodology like <a href="http://getbem.com/">BEM</a> or a library like <a href="https://www.styled-components.com/">Styled Components</a>, we\'re really just trying to make styles predictable within the scope of of a reusable component.</p>'},created:1518473671}},pathContext:{slug:"/link/designer-oriented-styles-james-kyle/"}}}});
//# sourceMappingURL=path---link-designer-oriented-styles-james-kyle-e87052bd75d3fcea1294.js.map