{"version":3,"sources":["webpack:///path---link-my-approach-to-patternlab-mark-conroy-b7e94e1f0fa09d3024ce.js","webpack:///./.cache/json/link-my-approach-to-patternlab-mark-conroy.json"],"names":["webpackJsonp","1118","module","exports","data","nodePost","title","body","value","relationships","image","created","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,MAAA,0CAAAC,MAA0DC,MAAA,6tCAAouCC,eAAkBC,MAAA,MAAaC,QAAA,aAAuBC,aAAgBC,KAAA","file":"path---link-my-approach-to-patternlab-mark-conroy-b7e94e1f0fa09d3024ce.js","sourcesContent":["webpackJsonp([199117534025612],{\n\n/***/ 1118:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"nodePost\":{\"title\":\"My Approach to PatternLab - Mark Conroy\",\"body\":{\"value\":\"<blockquote>When I changed the conversation and started talking about ‘Building Blocks’ (what we call our Drupal paragraph types), site blocks (Drupal's search block, branding block), display types (Drupal's view modes such as teaser, search result), etc, they immediately understood.</blockquote>\\r\\n<p>I'm setting up some front end tooling for an upcoming project and was also considering not using the atoms/molecules/organism naming conventions this time around. My naming conventions will likely vary based on the approach to the build, but the general approach here makes a lot of sense to me. Not surprised that it makes sense to clients as well.</p>\\r\\n<blockquote>After that, I have Backstop.js set up to regression test all of these, so each time I create a new component I can quickly run the visual regression tests and check that nothing has broken. Since all my CSS/JS is scoped to each individual component, it's rare if something is.</blockquote>\\r\\n<p>This. For this next build I was planning on having full visual regression testing coverage in the pattern library and then some sampling in Drupal, most likely assisted by the <a href=\\\"https://www.drupal.org/project/backstop_generator\\\">Backstop Generator</a> module.</p>\"},\"relationships\":{\"image\":null},\"created\":1528833541}},\"pathContext\":{\"slug\":\"/link/my-approach-to-patternlab-mark-conroy/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---link-my-approach-to-patternlab-mark-conroy-b7e94e1f0fa09d3024ce.js","module.exports = {\"data\":{\"nodePost\":{\"title\":\"My Approach to PatternLab - Mark Conroy\",\"body\":{\"value\":\"<blockquote>When I changed the conversation and started talking about ‘Building Blocks’ (what we call our Drupal paragraph types), site blocks (Drupal's search block, branding block), display types (Drupal's view modes such as teaser, search result), etc, they immediately understood.</blockquote>\\r\\n<p>I'm setting up some front end tooling for an upcoming project and was also considering not using the atoms/molecules/organism naming conventions this time around. My naming conventions will likely vary based on the approach to the build, but the general approach here makes a lot of sense to me. Not surprised that it makes sense to clients as well.</p>\\r\\n<blockquote>After that, I have Backstop.js set up to regression test all of these, so each time I create a new component I can quickly run the visual regression tests and check that nothing has broken. Since all my CSS/JS is scoped to each individual component, it's rare if something is.</blockquote>\\r\\n<p>This. For this next build I was planning on having full visual regression testing coverage in the pattern library and then some sampling in Drupal, most likely assisted by the <a href=\\\"https://www.drupal.org/project/backstop_generator\\\">Backstop Generator</a> module.</p>\"},\"relationships\":{\"image\":null},\"created\":1528833541}},\"pathContext\":{\"slug\":\"/link/my-approach-to-patternlab-mark-conroy/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/link-my-approach-to-patternlab-mark-conroy.json\n// module id = 1118\n// module chunks = 199117534025612"],"sourceRoot":""}